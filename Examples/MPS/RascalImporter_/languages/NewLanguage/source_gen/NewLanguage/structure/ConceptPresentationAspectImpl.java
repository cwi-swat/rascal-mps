package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_AstNode;
  private ConceptPresentation props_NonTerminalNode;
  private ConceptPresentation props_RascalImporter;
  private ConceptPresentation props_TerminalNode;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AstNode:
        if (props_AstNode == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_AstNode = cpb.create();
        }
        return props_AstNode;
      case LanguageConceptSwitch.NonTerminalNode:
        if (props_NonTerminalNode == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("NonTerminalNode");
          props_NonTerminalNode = cpb.create();
        }
        return props_NonTerminalNode;
      case LanguageConceptSwitch.RascalImporter:
        if (props_RascalImporter == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("RascalImporter");
          props_RascalImporter = cpb.create();
        }
        return props_RascalImporter;
      case LanguageConceptSwitch.TerminalNode:
        if (props_TerminalNode == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TerminalNode");
          props_TerminalNode = cpb.create();
        }
        return props_TerminalNode;
    }
    return null;
  }
}
