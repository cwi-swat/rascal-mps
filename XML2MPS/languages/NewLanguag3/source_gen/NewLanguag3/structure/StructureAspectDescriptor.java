package NewLanguag3.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptIds = createDescriptorForIds();
  /*package*/ final ConceptDescriptor myConceptMachines = createDescriptorForMachines();
  /*package*/ final ConceptDescriptor myConceptStates = createDescriptorForStates();
  /*package*/ final ConceptDescriptor myConceptTrans = createDescriptorForTrans();
  /*package*/ final ConceptDescriptor myConceptid = createDescriptorForid();
  /*package*/ final ConceptDescriptor myConceptmachine = createDescriptorFormachine();
  /*package*/ final ConceptDescriptor myConceptstate = createDescriptorForstate();
  /*package*/ final ConceptDescriptor myConcepttransition = createDescriptorFortransition();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeString = new ConstrainedStringDatatypeDescriptorImpl(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6617L, "String", "r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210775", "[a-z]*[a-z]$");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptIds, myConceptMachines, myConceptStates, myConceptTrans, myConceptid, myConceptmachine, myConceptstate, myConcepttransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Ids:
        return myConceptIds;
      case LanguageConceptSwitch.Machines:
        return myConceptMachines;
      case LanguageConceptSwitch.States:
        return myConceptStates;
      case LanguageConceptSwitch.Trans:
        return myConceptTrans;
      case LanguageConceptSwitch.id:
        return myConceptid;
      case LanguageConceptSwitch.machine:
        return myConceptmachine;
      case LanguageConceptSwitch.state:
        return myConceptstate;
      case LanguageConceptSwitch.transition:
        return myConcepttransition;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myCSDatatypeString);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForIds() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguag3", "Ids", 0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6616L);
    b.interface_();
    b.origin("r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210774");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMachines() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguag3", "Machines", 0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6620L);
    b.interface_();
    b.origin("r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210784");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStates() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguag3", "States", 0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf666fL);
    b.interface_();
    b.origin("r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210863");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrans() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguag3", "Trans", 0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf661bL);
    b.interface_();
    b.origin("r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210779");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguag3", "id", 0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6619L);
    b.class_(false, false, true);
    b.parent(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6616L);
    b.origin("r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210777");
    b.version(2);
    b.property("id", 0x59b7f9c6ffbf6618L).type(MetaIdFactory.dataTypeId(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6617L)).origin("6464910423203210776").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFormachine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguag3", "machine", 0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6621L);
    b.class_(false, false, true);
    b.parent(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6620L);
    b.origin("r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210785");
    b.version(2);
    b.aggregate("id", 0x59b7f9c6ffbf6623L).target(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6616L).optional(false).ordered(true).multiple(false).origin("6464910423203210787").done();
    b.aggregate("states", 0x59b7f9c6ffbf6674L).target(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf666fL).optional(true).ordered(true).multiple(true).origin("6464910423203210868").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForstate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguag3", "state", 0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6670L);
    b.class_(false, false, true);
    b.parent(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf666fL);
    b.origin("r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210864");
    b.version(2);
    b.aggregate("id", 0x59b7f9c6ffbf6672L).target(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6616L).optional(false).ordered(true).multiple(false).origin("6464910423203210866").done();
    b.aggregate("transitions", 0x59b7f9c6ffbf6673L).target(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf661bL).optional(true).ordered(true).multiple(true).origin("6464910423203210867").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFortransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguag3", "transition", 0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf661cL);
    b.class_(false, false, true);
    b.parent(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf661bL);
    b.origin("r:93ae4666-f858-4396-bef6-b171ad9c58a7(NewLanguag3.structure)/6464910423203210780");
    b.version(2);
    b.aggregate("on", 0x59b7f9c6ffbf661eL).target(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6616L).optional(false).ordered(true).multiple(false).origin("6464910423203210782").done();
    b.aggregate("to", 0x59b7f9c6ffbf661fL).target(0x6ca33e3e67d54f63L, 0x9d311a611e3ebd7fL, 0x59b7f9c6ffbf6616L).optional(false).ordered(true).multiple(false).origin("6464910423203210783").done();
    return b.create();
  }
}
