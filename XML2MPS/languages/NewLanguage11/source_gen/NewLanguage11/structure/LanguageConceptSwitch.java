package NewLanguage11.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Ids = 0;
  public static final int Machines = 1;
  public static final int States = 2;
  public static final int Trans = 3;
  public static final int id = 4;
  public static final int machine = 5;
  public static final int state = 6;
  public static final int transition = 7;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL);
    builder.put(0x3d163d232c67ebbdL, Ids);
    builder.put(0x3d163d232c67ebc7L, Machines);
    builder.put(0x3d163d232c67ebcbL, States);
    builder.put(0x3d163d232c67ebc2L, Trans);
    builder.put(0x3d163d232c67ebc0L, id);
    builder.put(0x3d163d232c67ebc8L, machine);
    builder.put(0x3d163d232c67ebccL, state);
    builder.put(0x3d163d232c67ebc3L, transition);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
