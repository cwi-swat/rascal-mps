package NewLanguage11.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptIds = createDescriptorForIds();
  /*package*/ final ConceptDescriptor myConceptMachines = createDescriptorForMachines();
  /*package*/ final ConceptDescriptor myConceptStates = createDescriptorForStates();
  /*package*/ final ConceptDescriptor myConceptTrans = createDescriptorForTrans();
  /*package*/ final ConceptDescriptor myConceptid = createDescriptorForid();
  /*package*/ final ConceptDescriptor myConceptmachine = createDescriptorFormachine();
  /*package*/ final ConceptDescriptor myConceptstate = createDescriptorForstate();
  /*package*/ final ConceptDescriptor myConcepttransition = createDescriptorFortransition();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeString = new ConstrainedStringDatatypeDescriptorImpl(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebbeL, "String", "r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396286", "[a-z]*[a-z]$");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptIds, myConceptMachines, myConceptStates, myConceptTrans, myConceptid, myConceptmachine, myConceptstate, myConcepttransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Ids:
        return myConceptIds;
      case LanguageConceptSwitch.Machines:
        return myConceptMachines;
      case LanguageConceptSwitch.States:
        return myConceptStates;
      case LanguageConceptSwitch.Trans:
        return myConceptTrans;
      case LanguageConceptSwitch.id:
        return myConceptid;
      case LanguageConceptSwitch.machine:
        return myConceptmachine;
      case LanguageConceptSwitch.state:
        return myConceptstate;
      case LanguageConceptSwitch.transition:
        return myConcepttransition;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myCSDatatypeString);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForIds() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage11", "Ids", 0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebbdL);
    b.interface_();
    b.origin("r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396285");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMachines() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage11", "Machines", 0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebc7L);
    b.interface_();
    b.origin("r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396295");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStates() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage11", "States", 0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebcbL);
    b.interface_();
    b.origin("r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396299");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrans() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage11", "Trans", 0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebc2L);
    b.interface_();
    b.origin("r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396290");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage11", "id", 0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebc0L);
    b.class_(false, false, true);
    b.parent(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebbdL);
    b.origin("r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396288");
    b.version(2);
    b.property("id", 0x3d163d232c67ebbfL).type(MetaIdFactory.dataTypeId(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebbeL)).origin("4401772907079396287").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFormachine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage11", "machine", 0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebc8L);
    b.class_(false, false, true);
    b.parent(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebc7L);
    b.origin("r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396296");
    b.version(2);
    b.aggregate("id", 0x3d163d232c67ebcaL).target(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebbdL).optional(false).ordered(true).multiple(false).origin("4401772907079396298").done();
    b.aggregate("states", 0x3d163d232c67ebd0L).target(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebcbL).optional(true).ordered(true).multiple(true).origin("4401772907079396304").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForstate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage11", "state", 0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebccL);
    b.class_(false, false, true);
    b.parent(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebcbL);
    b.origin("r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396300");
    b.version(2);
    b.aggregate("id", 0x3d163d232c67ebceL).target(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebbdL).optional(false).ordered(true).multiple(false).origin("4401772907079396302").done();
    b.aggregate("transitions", 0x3d163d232c67ebcfL).target(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebc2L).optional(true).ordered(true).multiple(true).origin("4401772907079396303").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFortransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage11", "transition", 0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebc3L);
    b.class_(false, false, true);
    b.parent(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebc2L);
    b.origin("r:6e6b3ef2-8786-4af7-a489-d0264e05bd2d(NewLanguage11.structure)/4401772907079396291");
    b.version(2);
    b.aggregate("on", 0x3d163d232c67ebc5L).target(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebbdL).optional(false).ordered(true).multiple(false).origin("4401772907079396293").done();
    b.aggregate("to", 0x3d163d232c67ebc6L).target(0x57d7d2c0735c4ce3L, 0xad212163b58bffccL, 0x3d163d232c67ebbdL).optional(false).ordered(true).multiple(false).origin("4401772907079396294").done();
    return b.create();
  }
}
