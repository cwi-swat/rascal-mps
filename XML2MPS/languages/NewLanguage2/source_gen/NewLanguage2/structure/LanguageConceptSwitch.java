package NewLanguage2.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int IId = 0;
  public static final int IMachine = 1;
  public static final int IState = 2;
  public static final int Id = 3;
  public static final int Trans = 4;
  public static final int machine = 5;
  public static final int state = 6;
  public static final int transition = 7;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L);
    builder.put(0x797ecb52638fb3e5L, IId);
    builder.put(0x797ecb52638fb3deL, IMachine);
    builder.put(0x797ecb52638fb3e1L, IState);
    builder.put(0x797ecb5263924e7cL, Id);
    builder.put(0x797ecb52638fb390L, Trans);
    builder.put(0x797ecb52638fb3dfL, machine);
    builder.put(0x797ecb52638fb3e2L, state);
    builder.put(0x797ecb52638fb391L, transition);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
