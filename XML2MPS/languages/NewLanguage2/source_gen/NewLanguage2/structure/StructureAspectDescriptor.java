package NewLanguage2.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptIId = createDescriptorForIId();
  /*package*/ final ConceptDescriptor myConceptIMachine = createDescriptorForIMachine();
  /*package*/ final ConceptDescriptor myConceptIState = createDescriptorForIState();
  /*package*/ final ConceptDescriptor myConceptId = createDescriptorForId();
  /*package*/ final ConceptDescriptor myConceptTrans = createDescriptorForTrans();
  /*package*/ final ConceptDescriptor myConceptmachine = createDescriptorFormachine();
  /*package*/ final ConceptDescriptor myConceptstate = createDescriptorForstate();
  /*package*/ final ConceptDescriptor myConcepttransition = createDescriptorFortransition();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptIId, myConceptIMachine, myConceptIState, myConceptId, myConceptTrans, myConceptmachine, myConceptstate, myConcepttransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.IId:
        return myConceptIId;
      case LanguageConceptSwitch.IMachine:
        return myConceptIMachine;
      case LanguageConceptSwitch.IState:
        return myConceptIState;
      case LanguageConceptSwitch.Id:
        return myConceptId;
      case LanguageConceptSwitch.Trans:
        return myConceptTrans;
      case LanguageConceptSwitch.machine:
        return myConceptmachine;
      case LanguageConceptSwitch.state:
        return myConceptstate;
      case LanguageConceptSwitch.transition:
        return myConcepttransition;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForIId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage2", "IId", 0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e5L);
    b.interface_();
    b.origin("r:cb32daa7-c64a-4c1d-9db0-82baa8d9952f(NewLanguage2.structure)/8754658280372941797");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIMachine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage2", "IMachine", 0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3deL);
    b.interface_();
    b.origin("r:cb32daa7-c64a-4c1d-9db0-82baa8d9952f(NewLanguage2.structure)/8754658280372941790");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage2", "IState", 0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e1L);
    b.interface_();
    b.origin("r:cb32daa7-c64a-4c1d-9db0-82baa8d9952f(NewLanguage2.structure)/8754658280372941793");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage2", "Id", 0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb5263924e7cL);
    b.class_(false, false, false);
    b.parent(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e5L);
    b.origin("r:cb32daa7-c64a-4c1d-9db0-82baa8d9952f(NewLanguage2.structure)/8754658280373112444");
    b.version(2);
    b.property("name", 0x797ecb5263924eb1L).type(PrimitiveTypeId.STRING).origin("8754658280373112497").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrans() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage2", "Trans", 0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb390L);
    b.interface_();
    b.origin("r:cb32daa7-c64a-4c1d-9db0-82baa8d9952f(NewLanguage2.structure)/8754658280372941712");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFormachine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage2", "machine", 0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3dfL);
    b.class_(false, false, true);
    b.parent(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3deL);
    b.origin("r:cb32daa7-c64a-4c1d-9db0-82baa8d9952f(NewLanguage2.structure)/8754658280372941791");
    b.version(2);
    b.aggregate("id", 0x797ecb52638fb3e8L).target(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e5L).optional(false).ordered(true).multiple(false).origin("8754658280372941800").done();
    b.aggregate("State", 0x797ecb52638fb3e9L).target(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e1L).optional(true).ordered(true).multiple(true).origin("8754658280372941801").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForstate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage2", "state", 0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e2L);
    b.class_(false, false, true);
    b.parent(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e1L);
    b.origin("r:cb32daa7-c64a-4c1d-9db0-82baa8d9952f(NewLanguage2.structure)/8754658280372941794");
    b.version(2);
    b.aggregate("Trans", 0x797ecb52638fb3e4L).target(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb390L).optional(true).ordered(true).multiple(true).origin("8754658280372941796").done();
    b.aggregate("id", 0x797ecb52638fb3eaL).target(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e5L).optional(false).ordered(true).multiple(false).origin("8754658280372941802").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFortransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage2", "transition", 0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb391L);
    b.class_(false, false, true);
    b.parent(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb390L);
    b.origin("r:cb32daa7-c64a-4c1d-9db0-82baa8d9952f(NewLanguage2.structure)/8754658280372941713");
    b.version(2);
    b.aggregate("on", 0x797ecb52638fb3e6L).target(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e5L).optional(false).ordered(true).multiple(false).origin("8754658280372941798").done();
    b.aggregate("to", 0x797ecb52638fb3e7L).target(0x1a0d3f5c999d45c8L, 0x8b1aa9c940c5c964L, 0x797ecb52638fb3e5L).optional(false).ordered(true).multiple(false).origin("8754658280372941799").done();
    return b.create();
  }
}
