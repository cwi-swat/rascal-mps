package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AstNode = 0;
  public static final int NonTerminalNode = 1;
  public static final int RascalImporter = 2;
  public static final int TerminalNode = 3;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x7694383cc1724f9bL, 0xba3e2e4103639d0dL);
    builder.put(0xef7205cf8eef2d4L, AstNode);
    builder.put(0xef7205cf8eef15eL, NonTerminalNode);
    builder.put(0xef7205cf8eef116L, RascalImporter);
    builder.put(0xef7205cf8eef121L, TerminalNode);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
